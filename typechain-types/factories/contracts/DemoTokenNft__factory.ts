/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DemoTokenNft,
  DemoTokenNftInterface,
} from "../../contracts/DemoTokenNft";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hiddenMetadataUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmountPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "mintForAddress",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    name: "setHiddenMetadataUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxMintAmountPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setRevealed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "setUriPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriSuffix",
        type: "string",
      },
    ],
    name: "setUriSuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setWhitelistMintEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriPrefix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052603660808181529062002add60a03980516200002991600c916020909101906200026b565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200005891600d916200026b565b506012805462ffffff191660011790553480156200007557600080fd5b5060405162002b3338038062002b338339810160408190526200009891620003de565b855186908690620000b19060029060208501906200026b565b508051620000c79060039060208401906200026b565b5050600160005550620000da3362000111565b6001600955620000ea8462000163565b6010839055620000fa82620001b7565b620001058162000207565b505050505050620004c8565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6008546001600160a01b03163314620001b25760405162461bcd60e51b8152602060048201819052602482015260008051602062002b1383398151915260448201526064015b60405180910390fd5b600f55565b6008546001600160a01b03163314620002025760405162461bcd60e51b8152602060048201819052602482015260008051602062002b138339815191526044820152606401620001a9565b601155565b6008546001600160a01b03163314620002525760405162461bcd60e51b8152602060048201819052602482015260008051602062002b138339815191526044820152606401620001a9565b80516200026790600e9060208401906200026b565b5050565b82805462000279906200048b565b90600052602060002090601f0160209004810192826200029d5760008555620002e8565b82601f10620002b857805160ff1916838001178555620002e8565b82800160010185558215620002e8579182015b82811115620002e8578251825591602001919060010190620002cb565b50620002f6929150620002fa565b5090565b5b80821115620002f65760008155600101620002fb565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200033957600080fd5b81516001600160401b038082111562000356576200035662000311565b604051601f8301601f19908116603f0116810190828211818310171562000381576200038162000311565b816040528381526020925086838588010111156200039e57600080fd5b600091505b83821015620003c25785820183015181830184015290820190620003a3565b83821115620003d45760008385830101525b9695505050505050565b60008060008060008060c08789031215620003f857600080fd5b86516001600160401b03808211156200041057600080fd5b6200041e8a838b0162000327565b975060208901519150808211156200043557600080fd5b620004438a838b0162000327565b965060408901519550606089015194506080890151935060a08901519150808211156200046f57600080fd5b506200047e89828a0162000327565b9150509295509295509295565b600181811c90821680620004a057607f821691505b60208210811415620004c257634e487b7160e01b600052602260045260246000fd5b50919050565b61260580620004d86000396000f3fe6080604052600436106102515760003560e01c8063715018a611610139578063b071401b116100b6578063d5abeb011161007a578063d5abeb011461069d578063db4bec44146106b3578063e0a80853146106e3578063e985e9c514610703578063efbd73f41461074c578063f2fde38b1461075f57600080fd5b8063b071401b1461060a578063b767a0981461062a578063b88d4fde1461064a578063c87b56dd1461066a578063d2cab0561461068a57600080fd5b806394354fd0116100fd57806394354fd01461059757806395d89b41146105ad578063a0712d68146105c2578063a22cb465146105d5578063a45ba8e7146105f557600080fd5b8063715018a61461050557806376ca49ae1461051a5780637cb64759146105395780637ec4a659146105595780638da5cb5b1461057957600080fd5b80633ccfd60b116101d2578063518302271161019657806351830227146104615780635503a0e8146104815780635c975abb1461049657806362b99ad4146104b05780636352211e146104c557806370a08231146104e557600080fd5b80633ccfd60b146103bf57806342842e0e146103d4578063438b6300146103f457806344a0d68a146104215780634fdd43cb1461044157600080fd5b806316ba10e01161021957806316ba10e01461032b57806316c38b3c1461034b57806318160ddd1461036b57806323b872dd146103895780632eb4a7ab146103a957600080fd5b806301ffc9a71461025657806306fdde031461028b578063081812fc146102ad578063095ea7b3146102e557806313faede614610307575b600080fd5b34801561026257600080fd5b50610276610271366004611f19565b61077f565b60405190151581526020015b60405180910390f35b34801561029757600080fd5b506102a06107d1565b6040516102829190611f8e565b3480156102b957600080fd5b506102cd6102c8366004611fa1565b610863565b6040516001600160a01b039091168152602001610282565b3480156102f157600080fd5b50610305610300366004611fd6565b6108a7565b005b34801561031357600080fd5b5061031d600f5481565b604051908152602001610282565b34801561033757600080fd5b5061030561034636600461208b565b610935565b34801561035757600080fd5b506103056103663660046120e3565b61097f565b34801561037757600080fd5b5061031d600154600054036000190190565b34801561039557600080fd5b506103056103a43660046120fe565b6109bc565b3480156103b557600080fd5b5061031d600a5481565b3480156103cb57600080fd5b506103056109c7565b3480156103e057600080fd5b506103056103ef3660046120fe565b610ac2565b34801561040057600080fd5b5061041461040f36600461213a565b610add565b6040516102829190612155565b34801561042d57600080fd5b5061030561043c366004611fa1565b610c1d565b34801561044d57600080fd5b5061030561045c36600461208b565b610c4c565b34801561046d57600080fd5b506012546102769062010000900460ff1681565b34801561048d57600080fd5b506102a0610c89565b3480156104a257600080fd5b506012546102769060ff1681565b3480156104bc57600080fd5b506102a0610d17565b3480156104d157600080fd5b506102cd6104e0366004611fa1565b610d24565b3480156104f157600080fd5b5061031d61050036600461213a565b610d36565b34801561051157600080fd5b50610305610d84565b34801561052657600080fd5b5060125461027690610100900460ff1681565b34801561054557600080fd5b50610305610554366004611fa1565b610dba565b34801561056557600080fd5b5061030561057436600461208b565b610de9565b34801561058557600080fd5b506008546001600160a01b03166102cd565b3480156105a357600080fd5b5061031d60115481565b3480156105b957600080fd5b506102a0610e26565b6103056105d0366004611fa1565b610e35565b3480156105e157600080fd5b506103056105f0366004612199565b610f51565b34801561060157600080fd5b506102a0610fe7565b34801561061657600080fd5b50610305610625366004611fa1565b610ff4565b34801561063657600080fd5b506103056106453660046120e3565b611023565b34801561065657600080fd5b506103056106653660046121cc565b611067565b34801561067657600080fd5b506102a0610685366004611fa1565b6110b8565b610305610698366004612247565b611210565b3480156106a957600080fd5b5061031d60105481565b3480156106bf57600080fd5b506102766106ce36600461213a565b600b6020526000908152604090205460ff1681565b3480156106ef57600080fd5b506103056106fe3660046120e3565b611468565b34801561070f57600080fd5b5061027661071e3660046122c5565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b61030561075a3660046122ef565b6114ae565b34801561076b57600080fd5b5061030561077a36600461213a565b61154e565b60006001600160e01b031982166380ac58cd60e01b14806107b057506001600160e01b03198216635b5e139f60e01b145b806107cb57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546107e090612312565b80601f016020809104026020016040519081016040528092919081815260200182805461080c90612312565b80156108595780601f1061082e57610100808354040283529160200191610859565b820191906000526020600020905b81548152906001019060200180831161083c57829003601f168201915b5050505050905090565b600061086e826115e9565b61088b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006108b282610d24565b9050806001600160a01b0316836001600160a01b031614156108e75760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906109075750610905813361071e565b155b15610925576040516367d9dca160e11b815260040160405180910390fd5b610930838383611622565b505050565b6008546001600160a01b031633146109685760405162461bcd60e51b815260040161095f9061234d565b60405180910390fd5b805161097b90600d906020840190611e6a565b5050565b6008546001600160a01b031633146109a95760405162461bcd60e51b815260040161095f9061234d565b6012805460ff1916911515919091179055565b61093083838361167e565b6008546001600160a01b031633146109f15760405162461bcd60e51b815260040161095f9061234d565b60026009541415610a445760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161095f565b60026009556000610a5d6008546001600160a01b031690565b6001600160a01b03164760405160006040518083038185875af1925050503d8060008114610aa7576040519150601f19603f3d011682016040523d82523d6000602084013e610aac565b606091505b5050905080610aba57600080fd5b506001600955565b61093083838360405180602001604052806000815250611067565b60606000610aea83610d36565b90506000816001600160401b03811115610b0657610b06612000565b604051908082528060200260200182016040528015610b2f578160200160208202803683370190505b50905060016000805b8482108015610b48575060005483105b15610c1257600083815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290610bff5780516001600160a01b031615610bb957805191505b876001600160a01b0316826001600160a01b03161415610bff5783858481518110610be657610be6612382565b602090810291909101015282610bfb816123ae565b9350505b83610c09816123ae565b94505050610b38565b509195945050505050565b6008546001600160a01b03163314610c475760405162461bcd60e51b815260040161095f9061234d565b600f55565b6008546001600160a01b03163314610c765760405162461bcd60e51b815260040161095f9061234d565b805161097b90600e906020840190611e6a565b600d8054610c9690612312565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc290612312565b8015610d0f5780601f10610ce457610100808354040283529160200191610d0f565b820191906000526020600020905b815481529060010190602001808311610cf257829003601f168201915b505050505081565b600c8054610c9690612312565b6000610d2f8261186c565b5192915050565b60006001600160a01b038216610d5f576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b6008546001600160a01b03163314610dae5760405162461bcd60e51b815260040161095f9061234d565b610db86000611993565b565b6008546001600160a01b03163314610de45760405162461bcd60e51b815260040161095f9061234d565b600a55565b6008546001600160a01b03163314610e135760405162461bcd60e51b815260040161095f9061234d565b805161097b90600c906020840190611e6a565b6060600380546107e090612312565b80600081118015610e4857506011548111155b610e645760405162461bcd60e51b815260040161095f906123c9565b60105481610e79600154600054036000190190565b610e8391906123f7565b1115610ea15760405162461bcd60e51b815260040161095f9061240f565b8180600f54610eb0919061243d565b341015610ef45760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b604482015260640161095f565b60125460ff1615610f475760405162461bcd60e51b815260206004820152601760248201527f54686520636f6e74726163742069732070617573656421000000000000000000604482015260640161095f565b61093033846119e5565b6001600160a01b038216331415610f7b5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600e8054610c9690612312565b6008546001600160a01b0316331461101e5760405162461bcd60e51b815260040161095f9061234d565b601155565b6008546001600160a01b0316331461104d5760405162461bcd60e51b815260040161095f9061234d565b601280549115156101000261ff0019909216919091179055565b61107284848461167e565b6001600160a01b0383163b151580156110945750611092848484846119ff565b155b156110b2576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606110c3826115e9565b61110f5760405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e00604482015260640161095f565b60125462010000900460ff166111b157600e805461112c90612312565b80601f016020809104026020016040519081016040528092919081815260200182805461115890612312565b80156111a55780601f1061117a576101008083540402835291602001916111a5565b820191906000526020600020905b81548152906001019060200180831161118857829003601f168201915b50505050509050919050565b60006111bb611af7565b905060008151116111db5760405180602001604052806000815250611209565b806111e584611b06565b600d6040516020016111f99392919061245c565b6040516020818303038152906040525b9392505050565b8260008111801561122357506011548111155b61123f5760405162461bcd60e51b815260040161095f906123c9565b60105481611254600154600054036000190190565b61125e91906123f7565b111561127c5760405162461bcd60e51b815260040161095f9061240f565b8380600f5461128b919061243d565b3410156112cf5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b604482015260640161095f565b601254610100900460ff166113265760405162461bcd60e51b815260206004820152601e60248201527f57686974656c6973742073616c65206973206e6f7420656e61626c6564210000604482015260640161095f565b336000908152600b602052604090205460ff16156113865760405162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d6564000000000000000000604482015260640161095f565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061140085858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600a549150849050611c03565b61143c5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b604482015260640161095f565b336000818152600b60205260409020805460ff1916600117905561146090876119e5565b505050505050565b6008546001600160a01b031633146114925760405162461bcd60e51b815260040161095f9061234d565b60128054911515620100000262ff000019909216919091179055565b816000811180156114c157506011548111155b6114dd5760405162461bcd60e51b815260040161095f906123c9565b601054816114f2600154600054036000190190565b6114fc91906123f7565b111561151a5760405162461bcd60e51b815260040161095f9061240f565b6008546001600160a01b031633146115445760405162461bcd60e51b815260040161095f9061234d565b61093082846119e5565b6008546001600160a01b031633146115785760405162461bcd60e51b815260040161095f9061234d565b6001600160a01b0381166115dd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161095f565b6115e681611993565b50565b6000816001111580156115fd575060005482105b80156107cb575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006116898261186c565b9050836001600160a01b031681600001516001600160a01b0316146116c05760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03861614806116de57506116de853361071e565b806116f95750336116ee84610863565b6001600160a01b0316145b90508061171957604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661174057604051633a954ecd60e21b815260040160405180910390fd5b61174c60008487611622565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102178355870180845292208054919390911661182057600054821461182057805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b6040805160608101825260008082526020820181905291810191909152818060011115801561189c575060005481105b1561197a57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff161515918101829052906119785780516001600160a01b03161561190f579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611973579392505050565b61190f565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61097b828260405180602001604052806000815250611c19565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611a34903390899088908890600401612520565b602060405180830381600087803b158015611a4e57600080fd5b505af1925050508015611a7e575060408051601f3d908101601f19168201909252611a7b9181019061255d565b60015b611ad9573d808015611aac576040519150601f19603f3d011682016040523d82523d6000602084013e611ab1565b606091505b508051611ad1576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600c80546107e090612312565b606081611b2a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611b545780611b3e816123ae565b9150611b4d9050600a83612590565b9150611b2e565b6000816001600160401b03811115611b6e57611b6e612000565b6040519080825280601f01601f191660200182016040528015611b98576020820181803683370190505b5090505b8415611aef57611bad6001836125a4565b9150611bba600a866125bb565b611bc59060306123f7565b60f81b818381518110611bda57611bda612382565b60200101906001600160f81b031916908160001a905350611bfc600a86612590565b9450611b9c565b600082611c108584611c26565b14949350505050565b6109308383836001611c9a565b600081815b8451811015611c92576000858281518110611c4857611c48612382565b60200260200101519050808311611c6e5760008381526020829052604090209250611c7f565b600081815260208490526040902092505b5080611c8a816123ae565b915050611c2b565b509392505050565b6000546001600160a01b038516611cc357604051622e076360e81b815260040160405180910390fd5b83611ce15760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b429092169190910217905580808501838015611d9257506001600160a01b0387163b15155b15611e1b575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611de360008884806001019550886119ff565b611e00576040516368d2bf6b60e11b815260040160405180910390fd5b80821415611d98578260005414611e1657600080fd5b611e61565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821415611e1c575b50600055611865565b828054611e7690612312565b90600052602060002090601f016020900481019282611e985760008555611ede565b82601f10611eb157805160ff1916838001178555611ede565b82800160010185558215611ede579182015b82811115611ede578251825591602001919060010190611ec3565b50611eea929150611eee565b5090565b5b80821115611eea5760008155600101611eef565b6001600160e01b0319811681146115e657600080fd5b600060208284031215611f2b57600080fd5b813561120981611f03565b60005b83811015611f51578181015183820152602001611f39565b838111156110b25750506000910152565b60008151808452611f7a816020860160208601611f36565b601f01601f19169290920160200192915050565b6020815260006112096020830184611f62565b600060208284031215611fb357600080fd5b5035919050565b80356001600160a01b0381168114611fd157600080fd5b919050565b60008060408385031215611fe957600080fd5b611ff283611fba565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561203057612030612000565b604051601f8501601f19908116603f0116810190828211818310171561205857612058612000565b8160405280935085815286868601111561207157600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561209d57600080fd5b81356001600160401b038111156120b357600080fd5b8201601f810184136120c457600080fd5b611aef84823560208401612016565b80358015158114611fd157600080fd5b6000602082840312156120f557600080fd5b611209826120d3565b60008060006060848603121561211357600080fd5b61211c84611fba565b925061212a60208501611fba565b9150604084013590509250925092565b60006020828403121561214c57600080fd5b61120982611fba565b6020808252825182820181905260009190848201906040850190845b8181101561218d57835183529284019291840191600101612171565b50909695505050505050565b600080604083850312156121ac57600080fd5b6121b583611fba565b91506121c3602084016120d3565b90509250929050565b600080600080608085870312156121e257600080fd5b6121eb85611fba565b93506121f960208601611fba565b92506040850135915060608501356001600160401b0381111561221b57600080fd5b8501601f8101871361222c57600080fd5b61223b87823560208401612016565b91505092959194509250565b60008060006040848603121561225c57600080fd5b8335925060208401356001600160401b038082111561227a57600080fd5b818601915086601f83011261228e57600080fd5b81358181111561229d57600080fd5b8760208260051b85010111156122b257600080fd5b6020830194508093505050509250925092565b600080604083850312156122d857600080fd5b6122e183611fba565b91506121c360208401611fba565b6000806040838503121561230257600080fd5b823591506121c360208401611fba565b600181811c9082168061232657607f821691505b6020821081141561234757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156123c2576123c2612398565b5060010190565b602080825260149082015273496e76616c6964206d696e7420616d6f756e742160601b604082015260600190565b6000821982111561240a5761240a612398565b500190565b6020808252601490820152734d617820737570706c792065786365656465642160601b604082015260600190565b600081600019048311821515161561245757612457612398565b500290565b60008451602061246f8285838a01611f36565b8551918401916124828184848a01611f36565b8554920191600090600181811c908083168061249f57607f831692505b8583108114156124bd57634e487b7160e01b85526022600452602485fd5b8080156124d157600181146124e25761250f565b60ff1985168852838801955061250f565b60008b81526020902060005b858110156125075781548a8201529084019088016124ee565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061255390830184611f62565b9695505050505050565b60006020828403121561256f57600080fd5b815161120981611f03565b634e487b7160e01b600052601260045260246000fd5b60008261259f5761259f61257a565b500490565b6000828210156125b6576125b6612398565b500390565b6000826125ca576125ca61257a565b50069056fea26469706673582212204347c9692edd5b68f201b6180189cef9c3512b7819f031cf6526e1639729dfea64736f6c63430008090033697066733a2f2f516d617950786162675a6a515945716b4b644d4c6648777036685a617744484552515243426a50774b4c4d3163462f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

type DemoTokenNftConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoTokenNftConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoTokenNft__factory extends ContractFactory {
  constructor(...args: DemoTokenNftConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DemoTokenNft> {
    return super.deploy(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    ) as Promise<DemoTokenNft>;
  }
  override getDeployTransaction(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    );
  }
  override attach(address: string): DemoTokenNft {
    return super.attach(address) as DemoTokenNft;
  }
  override connect(signer: Signer): DemoTokenNft__factory {
    return super.connect(signer) as DemoTokenNft__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoTokenNftInterface {
    return new utils.Interface(_abi) as DemoTokenNftInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemoTokenNft {
    return new Contract(address, _abi, signerOrProvider) as DemoTokenNft;
  }
}
