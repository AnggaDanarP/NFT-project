/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DemoProject,
  DemoProjectInterface,
} from "../../contracts/DemoProject";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupplyPreSale",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupplyPublicSale",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "giftMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hiddenMetadataUri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMintAmountPerTx",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupplyPreSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupplyPublicSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "_merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "preSaleMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "preSaleMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintAmount",
        type: "uint256",
      },
    ],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicSaleMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cost",
        type: "uint256",
      },
    ],
    name: "setCost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_hiddenMetadataUri",
        type: "string",
      },
    ],
    name: "setHiddenMetadataUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxMintAmountPerTx",
        type: "uint256",
      },
    ],
    name: "setMaxMintAmountPerTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setPaused",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setRevealed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriPrefix",
        type: "string",
      },
    ],
    name: "setUriPrefix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uriSuffix",
        type: "string",
      },
    ],
    name: "setUriSuffix",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_state",
        type: "bool",
      },
    ],
    name: "setWhitelistMintEnabled",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uriPrefix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uriSuffix",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintEnable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b91600c9162000273565b5060408051808201909152600580825264173539b7b760d91b60209092019182526200004a91600d9162000273565b506014805462ffffff19166001179055600060158190556016553480156200007157600080fd5b5060405162002c5838038062002c588339810160408190526200009491620003e6565b875188908890620000ad90600290602085019062000273565b508051620000c390600390602084019062000273565b5050600160005550620000d63362000119565b6001600955620000e6866200016b565b6010859055601184905560128390556200010082620001bf565b6200010b816200020f565b5050505050505050620004e5565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6008546001600160a01b03163314620001ba5760405162461bcd60e51b8152602060048201819052602482015260008051602062002c3883398151915260448201526064015b60405180910390fd5b600f55565b6008546001600160a01b031633146200020a5760405162461bcd60e51b8152602060048201819052602482015260008051602062002c388339815191526044820152606401620001b1565b601355565b6008546001600160a01b031633146200025a5760405162461bcd60e51b8152602060048201819052602482015260008051602062002c388339815191526044820152606401620001b1565b80516200026f90600e90602084019062000273565b5050565b8280546200028190620004a8565b90600052602060002090601f016020900481019282620002a55760008555620002f0565b82601f10620002c057805160ff1916838001178555620002f0565b82800160010185558215620002f0579182015b82811115620002f0578251825591602001919060010190620002d3565b50620002fe92915062000302565b5090565b5b80821115620002fe576000815560010162000303565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200034157600080fd5b81516001600160401b03808211156200035e576200035e62000319565b604051601f8301601f19908116603f0116810190828211818310171562000389576200038962000319565b81604052838152602092508683858801011115620003a657600080fd5b600091505b83821015620003ca5785820183015181830184015290820190620003ab565b83821115620003dc5760008385830101525b9695505050505050565b600080600080600080600080610100898b0312156200040457600080fd5b88516001600160401b03808211156200041c57600080fd5b6200042a8c838d016200032f565b995060208b01519150808211156200044157600080fd5b6200044f8c838d016200032f565b985060408b0151975060608b0151965060808b0151955060a08b0151945060c08b0151935060e08b01519150808211156200048957600080fd5b50620004988b828c016200032f565b9150509295985092959890939650565b600181811c90821680620004bd57607f821691505b60208210811415620004df57634e487b7160e01b600052602260045260246000fd5b50919050565b61274380620004f56000396000f3fe60806040526004361061027d5760003560e01c80636352211e1161014f578063a22cb465116100c1578063c87b56dd1161007a578063c87b56dd14610720578063d5abeb0114610740578063db4bec4414610756578063e0a8085314610786578063e985e9c5146107a6578063f2fde38b146107ef57600080fd5b8063a22cb46514610675578063a45ba8e714610695578063a666098d146106aa578063b071401b146106c0578063b767a098146106e0578063b88d4fde1461070057600080fd5b80637cb64759116101135780637cb64759146105cc5780637ec4a659146105ec5780638da5cb5b1461060c5780638f566abb1461062a57806394354fd01461064a57806395d89b411461066057600080fd5b80636352211e1461054257806370a0823114610562578063715018a61461058257806376ca49ae146105975780637b6da26a146105b657600080fd5b80632687d340116101f35780634c220f6e116101ac5780634c220f6e146104ab5780634fdd43cb146104be57806351830227146104de5780635503a0e8146104fe5780635c975abb1461051357806362b99ad41461052d57600080fd5b80632687d340146103ff5780632db11544146104155780632eb4a7ab1461042857806342842e0e1461043e578063438b63001461045e57806344a0d68a1461048b57600080fd5b806313faede61161024557806313faede61461035757806316ba10e01461036d57806316c38b3c1461038d57806318160ddd146103ad57806323b872dd146103ca57806324600fc3146103ea57600080fd5b806301ffc9a71461028257806306fdde03146102b7578063081812fc146102d9578063095ea7b31461031157806312d99c4d14610333575b600080fd5b34801561028e57600080fd5b506102a261029d366004612057565b61080f565b60405190151581526020015b60405180910390f35b3480156102c357600080fd5b506102cc610861565b6040516102ae91906120cc565b3480156102e557600080fd5b506102f96102f43660046120df565b6108f3565b6040516001600160a01b0390911681526020016102ae565b34801561031d57600080fd5b5061033161032c366004612114565b610937565b005b34801561033f57600080fd5b5061034960125481565b6040519081526020016102ae565b34801561036357600080fd5b50610349600f5481565b34801561037957600080fd5b506103316103883660046121c9565b6109c5565b34801561039957600080fd5b506103316103a8366004612221565b610a0f565b3480156103b957600080fd5b506001546000540360001901610349565b3480156103d657600080fd5b506103316103e536600461223c565b610a4c565b3480156103f657600080fd5b50610331610a57565b34801561040b57600080fd5b5061034960155481565b6103316104233660046120df565b610b00565b34801561043457600080fd5b50610349600a5481565b34801561044a57600080fd5b5061033161045936600461223c565b610c92565b34801561046a57600080fd5b5061047e610479366004612278565b610cad565b6040516102ae9190612293565b34801561049757600080fd5b506103316104a63660046120df565b610ded565b6103316104b93660046122d7565b610e1c565b3480156104ca57600080fd5b506103316104d93660046121c9565b6110ea565b3480156104ea57600080fd5b506014546102a29062010000900460ff1681565b34801561050a57600080fd5b506102cc611127565b34801561051f57600080fd5b506014546102a29060ff1681565b34801561053957600080fd5b506102cc6111b5565b34801561054e57600080fd5b506102f961055d3660046120df565b6111c2565b34801561056e57600080fd5b5061034961057d366004612278565b6111d4565b34801561058e57600080fd5b50610331611222565b3480156105a357600080fd5b506014546102a290610100900460ff1681565b3480156105c257600080fd5b5061034960115481565b3480156105d857600080fd5b506103316105e73660046120df565b611258565b3480156105f857600080fd5b506103316106073660046121c9565b611287565b34801561061857600080fd5b506008546001600160a01b03166102f9565b34801561063657600080fd5b50610331610645366004612355565b6112c4565b34801561065657600080fd5b5061034960135481565b34801561066c57600080fd5b506102cc61137b565b34801561068157600080fd5b50610331610690366004612381565b61138a565b3480156106a157600080fd5b506102cc611420565b3480156106b657600080fd5b5061034960165481565b3480156106cc57600080fd5b506103316106db3660046120df565b61142d565b3480156106ec57600080fd5b506103316106fb366004612221565b61145c565b34801561070c57600080fd5b5061033161071b3660046123ab565b6114a0565b34801561072c57600080fd5b506102cc61073b3660046120df565b6114f1565b34801561074c57600080fd5b5061034960105481565b34801561076257600080fd5b506102a2610771366004612278565b600b6020526000908152604090205460ff1681565b34801561079257600080fd5b506103316107a1366004612221565b611649565b3480156107b257600080fd5b506102a26107c1366004612426565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b3480156107fb57600080fd5b5061033161080a366004612278565b61168f565b60006001600160e01b031982166380ac58cd60e01b148061084057506001600160e01b03198216635b5e139f60e01b145b8061085b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461087090612450565b80601f016020809104026020016040519081016040528092919081815260200182805461089c90612450565b80156108e95780601f106108be576101008083540402835291602001916108e9565b820191906000526020600020905b8154815290600101906020018083116108cc57829003601f168201915b5050505050905090565b60006108fe82611727565b61091b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b6000610942826111c2565b9050806001600160a01b0316836001600160a01b031614156109775760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614801590610997575061099581336107c1565b155b156109b5576040516367d9dca160e11b815260040160405180910390fd5b6109c0838383611760565b505050565b6008546001600160a01b031633146109f85760405162461bcd60e51b81526004016109ef9061248b565b60405180910390fd5b8051610a0b90600d906020840190611fa8565b5050565b6008546001600160a01b03163314610a395760405162461bcd60e51b81526004016109ef9061248b565b6014805460ff1916911515919091179055565b6109c08383836117bc565b6008546001600160a01b03163314610a815760405162461bcd60e51b81526004016109ef9061248b565b60004711610ad15760405162461bcd60e51b815260206004820152601c60248201527f4661696c65643a206e6f2066756e647320746f2077697468647261770000000060448201526064016109ef565b60405133904780156108fc02916000818181858888f19350505050158015610afd573d6000803e3d6000fd5b50565b80600081118015610b1357506013548111155b610b2f5760405162461bcd60e51b81526004016109ef906124c0565b60105481601654601554610b439190612504565b610b4d9190612504565b1115610b6b5760405162461bcd60e51b81526004016109ef9061251c565b8180600f54610b7a919061254a565b341015610bbe5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016109ef565b60145460ff1615610c115760405162461bcd60e51b815260206004820152601760248201527f54686520636f6e7472616374206973207061757365642100000000000000000060448201526064016109ef565b60125483601654610c229190612504565b1115610c705760405162461bcd60e51b815260206004820152601b60248201527f4d6178207075626c696320737570706c7920657863656564656421000000000060448201526064016109ef565b8260166000828254610c829190612504565b909155506109c0905033846119aa565b6109c0838383604051806020016040528060008152506114a0565b60606000610cba836111d4565b90506000816001600160401b03811115610cd657610cd661213e565b604051908082528060200260200182016040528015610cff578160200160208202803683370190505b50905060016000805b8482108015610d18575060005483105b15610de257600083815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290610dcf5780516001600160a01b031615610d8957805191505b876001600160a01b0316826001600160a01b03161415610dcf5783858481518110610db657610db6612569565b602090810291909101015282610dcb8161257f565b9350505b83610dd98161257f565b94505050610d08565b509195945050505050565b6008546001600160a01b03163314610e175760405162461bcd60e51b81526004016109ef9061248b565b600f55565b82600081118015610e2f57506013548111155b610e4b5760405162461bcd60e51b81526004016109ef906124c0565b60105481601654601554610e5f9190612504565b610e699190612504565b1115610e875760405162461bcd60e51b81526004016109ef9061251c565b8380600f54610e96919061254a565b341015610eda5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016109ef565b60115485601554610eeb9190612504565b1115610f395760405162461bcd60e51b815260206004820152601d60248201527f4d6178207072652d73616c6520737570706c792065786365656465642100000060448201526064016109ef565b601454610100900460ff16610f905760405162461bcd60e51b815260206004820152601e60248201527f57686974656c6973742073616c65206973206e6f7420656e61626c656421000060448201526064016109ef565b336000908152600b602052604090205460ff1615610ff05760405162461bcd60e51b815260206004820152601760248201527f4164647265737320616c726561647920636c61696d656400000000000000000060448201526064016109ef565b6040516bffffffffffffffffffffffff193360601b16602082015260009060340160405160208183030381529060405280519060200120905061106a85858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050600a5491508490506119c4565b6110a65760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210283937b7b360991b60448201526064016109ef565b336000908152600b60205260408120805460ff19166001179055601580548892906110d2908490612504565b909155506110e2905033876119aa565b505050505050565b6008546001600160a01b031633146111145760405162461bcd60e51b81526004016109ef9061248b565b8051610a0b90600e906020840190611fa8565b600d805461113490612450565b80601f016020809104026020016040519081016040528092919081815260200182805461116090612450565b80156111ad5780601f10611182576101008083540402835291602001916111ad565b820191906000526020600020905b81548152906001019060200180831161119057829003601f168201915b505050505081565b600c805461113490612450565b60006111cd826119da565b5192915050565b60006001600160a01b0382166111fd576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b6008546001600160a01b0316331461124c5760405162461bcd60e51b81526004016109ef9061248b565b6112566000611b01565b565b6008546001600160a01b031633146112825760405162461bcd60e51b81526004016109ef9061248b565b600a55565b6008546001600160a01b031633146112b15760405162461bcd60e51b81526004016109ef9061248b565b8051610a0b90600c906020840190611fa8565b6008546001600160a01b031633146112ee5760405162461bcd60e51b81526004016109ef9061248b565b8160008111801561130157506013548111155b61131d5760405162461bcd60e51b81526004016109ef906124c0565b601054816016546015546113319190612504565b61133b9190612504565b11156113595760405162461bcd60e51b81526004016109ef9061251c565b826016600082825461136b9190612504565b909155506109c0905082846119aa565b60606003805461087090612450565b6001600160a01b0382163314156113b45760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600e805461113490612450565b6008546001600160a01b031633146114575760405162461bcd60e51b81526004016109ef9061248b565b601355565b6008546001600160a01b031633146114865760405162461bcd60e51b81526004016109ef9061248b565b601480549115156101000261ff0019909216919091179055565b6114ab8484846117bc565b6001600160a01b0383163b151580156114cd57506114cb84848484611b53565b155b156114eb576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606114fc82611727565b6115485760405162461bcd60e51b815260206004820152601f60248201527f55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e0060448201526064016109ef565b60145462010000900460ff166115ea57600e805461156590612450565b80601f016020809104026020016040519081016040528092919081815260200182805461159190612450565b80156115de5780601f106115b3576101008083540402835291602001916115de565b820191906000526020600020905b8154815290600101906020018083116115c157829003601f168201915b50505050509050919050565b60006115f4611c4b565b905060008151116116145760405180602001604052806000815250611642565b8061161e84611c5a565b600d6040516020016116329392919061259a565b6040516020818303038152906040525b9392505050565b6008546001600160a01b031633146116735760405162461bcd60e51b81526004016109ef9061248b565b60148054911515620100000262ff000019909216919091179055565b6008546001600160a01b031633146116b95760405162461bcd60e51b81526004016109ef9061248b565b6001600160a01b03811661171e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016109ef565b610afd81611b01565b60008160011115801561173b575060005482105b801561085b575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006117c7826119da565b9050836001600160a01b031681600001516001600160a01b0316146117fe5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061181c575061181c85336107c1565b8061183757503361182c846108f3565b6001600160a01b0316145b90508061185757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661187e57604051633a954ecd60e21b815260040160405180910390fd5b61188a60008487611760565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b4290921691909102178355870180845292208054919390911661195e57600054821461195e57805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45b5050505050565b610a0b828260405180602001604052806000815250611d57565b6000826119d18584611d64565b14949350505050565b60408051606081018252600080825260208201819052918101919091528180600111158015611a0a575060005481105b15611ae857600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611ae65780516001600160a01b031615611a7d579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611ae1579392505050565b611a7d565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611b8890339089908890889060040161265e565b602060405180830381600087803b158015611ba257600080fd5b505af1925050508015611bd2575060408051601f3d908101601f19168201909252611bcf9181019061269b565b60015b611c2d573d808015611c00576040519150601f19603f3d011682016040523d82523d6000602084013e611c05565b606091505b508051611c25576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600c805461087090612450565b606081611c7e5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611ca85780611c928161257f565b9150611ca19050600a836126ce565b9150611c82565b6000816001600160401b03811115611cc257611cc261213e565b6040519080825280601f01601f191660200182016040528015611cec576020820181803683370190505b5090505b8415611c4357611d016001836126e2565b9150611d0e600a866126f9565b611d19906030612504565b60f81b818381518110611d2e57611d2e612569565b60200101906001600160f81b031916908160001a905350611d50600a866126ce565b9450611cf0565b6109c08383836001611dd8565b600081815b8451811015611dd0576000858281518110611d8657611d86612569565b60200260200101519050808311611dac5760008381526020829052604090209250611dbd565b600081815260208490526040902092505b5080611dc88161257f565b915050611d69565b509392505050565b6000546001600160a01b038516611e0157604051622e076360e81b815260040160405180910390fd5b83611e1f5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b429092169190910217905580808501838015611ed057506001600160a01b0387163b15155b15611f59575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4611f216000888480600101955088611b53565b611f3e576040516368d2bf6b60e11b815260040160405180910390fd5b80821415611ed6578260005414611f5457600080fd5b611f9f565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480821415611f5a575b506000556119a3565b828054611fb490612450565b90600052602060002090601f016020900481019282611fd6576000855561201c565b82601f10611fef57805160ff191683800117855561201c565b8280016001018555821561201c579182015b8281111561201c578251825591602001919060010190612001565b5061202892915061202c565b5090565b5b80821115612028576000815560010161202d565b6001600160e01b031981168114610afd57600080fd5b60006020828403121561206957600080fd5b813561164281612041565b60005b8381101561208f578181015183820152602001612077565b838111156114eb5750506000910152565b600081518084526120b8816020860160208601612074565b601f01601f19169290920160200192915050565b60208152600061164260208301846120a0565b6000602082840312156120f157600080fd5b5035919050565b80356001600160a01b038116811461210f57600080fd5b919050565b6000806040838503121561212757600080fd5b612130836120f8565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b038084111561216e5761216e61213e565b604051601f8501601f19908116603f011681019082821181831017156121965761219661213e565b816040528093508581528686860111156121af57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156121db57600080fd5b81356001600160401b038111156121f157600080fd5b8201601f8101841361220257600080fd5b611c4384823560208401612154565b8035801515811461210f57600080fd5b60006020828403121561223357600080fd5b61164282612211565b60008060006060848603121561225157600080fd5b61225a846120f8565b9250612268602085016120f8565b9150604084013590509250925092565b60006020828403121561228a57600080fd5b611642826120f8565b6020808252825182820181905260009190848201906040850190845b818110156122cb578351835292840192918401916001016122af565b50909695505050505050565b6000806000604084860312156122ec57600080fd5b8335925060208401356001600160401b038082111561230a57600080fd5b818601915086601f83011261231e57600080fd5b81358181111561232d57600080fd5b8760208260051b850101111561234257600080fd5b6020830194508093505050509250925092565b6000806040838503121561236857600080fd5b82359150612378602084016120f8565b90509250929050565b6000806040838503121561239457600080fd5b61239d836120f8565b915061237860208401612211565b600080600080608085870312156123c157600080fd5b6123ca856120f8565b93506123d8602086016120f8565b92506040850135915060608501356001600160401b038111156123fa57600080fd5b8501601f8101871361240b57600080fd5b61241a87823560208401612154565b91505092959194509250565b6000806040838503121561243957600080fd5b612442836120f8565b9150612378602084016120f8565b600181811c9082168061246457607f821691505b6020821081141561248557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602080825260149082015273496e76616c6964206d696e7420616d6f756e742160601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115612517576125176124ee565b500190565b6020808252601490820152734d617820737570706c792065786365656465642160601b604082015260600190565b6000816000190483118215151615612564576125646124ee565b500290565b634e487b7160e01b600052603260045260246000fd5b6000600019821415612593576125936124ee565b5060010190565b6000845160206125ad8285838a01612074565b8551918401916125c08184848a01612074565b8554920191600090600181811c90808316806125dd57607f831692505b8583108114156125fb57634e487b7160e01b85526022600452602485fd5b80801561260f57600181146126205761264d565b60ff1985168852838801955061264d565b60008b81526020902060005b858110156126455781548a82015290840190880161262c565b505083880195505b50939b9a5050505050505050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612691908301846120a0565b9695505050505050565b6000602082840312156126ad57600080fd5b815161164281612041565b634e487b7160e01b600052601260045260246000fd5b6000826126dd576126dd6126b8565b500490565b6000828210156126f4576126f46124ee565b500390565b600082612708576127086126b8565b50069056fea264697066735822122045cb8323e07dc0102336814f3518c40b5b0882d05b8515032a08535b6e23c60e64736f6c634300080900334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

type DemoProjectConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DemoProjectConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DemoProject__factory extends ContractFactory {
  constructor(...args: DemoProjectConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxSupplyPreSale: BigNumberish,
    _maxSupplyPublicSale: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DemoProject> {
    return super.deploy(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxSupplyPreSale,
      _maxSupplyPublicSale,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    ) as Promise<DemoProject>;
  }
  override getDeployTransaction(
    _tokenName: string,
    _tokenSymbol: string,
    _cost: BigNumberish,
    _maxSupply: BigNumberish,
    _maxSupplyPreSale: BigNumberish,
    _maxSupplyPublicSale: BigNumberish,
    _maxMintAmountPerTx: BigNumberish,
    _hiddenMetadataUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenName,
      _tokenSymbol,
      _cost,
      _maxSupply,
      _maxSupplyPreSale,
      _maxSupplyPublicSale,
      _maxMintAmountPerTx,
      _hiddenMetadataUri,
      overrides || {}
    );
  }
  override attach(address: string): DemoProject {
    return super.attach(address) as DemoProject;
  }
  override connect(signer: Signer): DemoProject__factory {
    return super.connect(signer) as DemoProject__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DemoProjectInterface {
    return new utils.Interface(_abi) as DemoProjectInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DemoProject {
    return new Contract(address, _abi, signerOrProvider) as DemoProject;
  }
}
